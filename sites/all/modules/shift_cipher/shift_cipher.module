<?php

function shift_cipher_menu() {
    $items['shift_cipher'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('shift_cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['shift_cipher_success_page'] = array(
        'title' => 'Your cipher:',
        'page callback' => array('shift_cipher_success'),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function shift_cipher_form() {
    $form['shift_value'] = array(
        '#title' => 'Shift Value',
        '#type' => 'textfield',
        '#description' => 'Enter the number of places to shift each letter over',
        '#element_validate' => array('element_validate_integer'),
        '#required' => TRUE,
    );
    $form['shift_direction'] = array(
        '#title' => 'Shift Direction',
        '#type' => 'textfield',
        '#description' => 'Enter the direction to shift each letter over. "Left" or "Right"',
        '#required' => TRUE,
    );
    $form['user_input'] = array(
        '#title' => 'Input phrase',
        '#type' => 'textarea',
        '#description' => 'Enter the phrase to be encrypted.  Only letters, spaces, and punctuation are allowed',
        '#required' => TRUE,
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Encrypt',
    );

    return $form;
}

function shift_cipher_form_validate($form, &$form_state) {
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = strtolower($form_state['values']['shift_direction']);
    $user_input = $form_state['values']['user_input'];

    if ($shift_value < 0) {
        form_set_error('', 'Shift value must be a positive integer.');
    }

    if (($shift_direction != 'left') && ($shift_direction != 'right')) {
        form_set_error('', 'Shift direction must be "left" or "right".');
    }

    if (preg_match("/[^a-zA-Z\s.,?!':;_&()_]/", $user_input)) {
        form_set_error('', 'Input phrase may only contain letters, spaces, and punctuation');
    }

}

function shift_cipher_form_submit($form, &$form_state) {
    $shift_value = (($form_state['values']['shift_value']) % 26);
    $shift_direction = strtolower($form_state['values']['shift_direction']);
    $user_input = strtolower($form_state['values']['user_input']);
    $split_input_as_words = explode(' ', $user_input);
    $encrypted_words = array();

    $_SESSION['user_input'] = $form_state['values']['user_input'];


    //Encrypts each word individually to avoid issues with spaces
    foreach($split_input_as_words as $word) {
        $encrypted_letters = array();
        $letters = str_split($word);

        foreach($letters as $letter) {

            //verifies that each item is a letter
            if (ctype_alnum($letter)) {

                //convert letter to ascii value
                $ascii_value = ord($letter);

                //add or subtract the shift value
                if ($shift_direction == 'left') {
                    $shifted_ascii_value = $ascii_value - $shift_value;
                } else {
                    $shifted_ascii_value = $ascii_value + $shift_value;
                }
                //edge case management
                if ($shifted_ascii_value > 122) {
                    $shifted_ascii_value -= 26;
                }
                if ($shifted_ascii_value < 97) {
                    $shifted_ascii_value += 26;
                }

                //convert new ascii value to letter
                $converted_letter = chr($shifted_ascii_value);

                //push letter to an array of letters
                array_push($encrypted_letters, $converted_letter);
            } else {

                //punctuation is untouched
                array_push($encrypted_letters, $letter);
            }
        }
        //implode the array of letters to the new encrypted word
        $encrypted_word = implode($encrypted_letters);

        //push encrypted words into output array of words
        array_push($encrypted_words, $encrypted_word);
    }
    $output = implode(" ", $encrypted_words);

    //save output to session variable
    $_SESSION['encrypted_words'] = $output;

    $form_state['redirect'] = 'shift_cipher_success_page';
}

function shift_cipher_success() {
    $result = $_SESSION['encrypted_words'];
    return '<p> You entered: "' . $_SESSION['user_input'] . '"</p><p>The ecryption is: <strong>'  . $result . '</strong></p>';
}
